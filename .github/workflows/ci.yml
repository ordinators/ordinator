name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test and Coverage
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --all-features
    
    - name: Run security audit
      run: cargo audit --deny warnings
    
    - name: Generate coverage report
      run: cargo tarpaulin --out Xml --output-dir coverage
    
    - name: Generate coverage summary
      run: |
        echo "=== Coverage Summary ==="
        cargo tarpaulin --out Html --output-dir coverage-html || true
        echo "HTML coverage report generated in coverage-html/"
        echo "Coverage data available in coverage/cobertura.xml"
    
    - name: Display coverage summary
      if: always()
      run: |
        echo "=== Coverage Summary ==="
        if [ -f "./coverage/cobertura.xml" ]; then
          echo "Coverage report generated successfully"
          echo "Coverage data available in coverage/cobertura.xml"
        else
          echo "Coverage report not found"
        fi 