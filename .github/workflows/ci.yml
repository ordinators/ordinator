name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test and Coverage
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Cache dependencies and tools
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install cargo tools (if not cached)
      run: |
        if ! command -v cargo-audit &> /dev/null; then
          echo "Installing cargo-audit..."
          curl -L https://github.com/rustsec/rustsec/releases/latest/download/cargo-audit-x86_64-apple-darwin.tar.gz | tar xz -C ~/.cargo/bin cargo-audit
        fi
        if [ "${{ github.event_name }}" = "pull_request" ] && ! command -v cargo-tarpaulin &> /dev/null; then
          echo "Installing cargo-tarpaulin..."
          curl -L https://github.com/xd009642/tarpaulin/releases/latest/download/cargo-tarpaulin-x86_64-apple-darwin.tar.gz | tar xz -C ~/.cargo/bin cargo-tarpaulin
        fi
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --release --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --release
    
    - name: Run tests and generate coverage (PR only)
      if: github.event_name == 'pull_request'
      run: cargo tarpaulin --release
    
    - name: Run security audit
      run: cargo audit --deny warnings 