name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  packages: write
  actions: read
  pull-requests: write
  issues: write

jobs:
  build:
    name: Build and Release
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
        rustup default stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build release binary
      run: |
        source $HOME/.cargo/env
        cargo build --release

    - name: Create source tarball
      run: |
        git archive --format=tar.gz --prefix=ordinator-${{ github.ref_name }}/ ${{ github.ref_name }} > source.tar.gz

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: |
          target/release/ordinator
          source.tar.gz
        retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/ordinator-macos
          dist/source.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Get SHA256 hash
      id: get_sha256
      run: |
        SHA256=$(curl -sL "https://github.com/ordinators/ordinator/archive/${{ steps.get_version.outputs.VERSION }}.tar.gz" | shasum -a 256 | cut -d' ' -f1)
        echo "SHA256=$SHA256" >> $GITHUB_OUTPUT

    - name: Checkout homebrew tap
      uses: actions/checkout@v4
      with:
        repository: ordinators/homebrew-ordinator
        token: ${{ secrets.GITHUB_TOKEN }}
        path: homebrew-tap
        ref: master

    - name: Update formula
      run: |
        cd homebrew-tap
        sed -i "s|url \"https://github.com/ordinators/ordinator/archive/v[0-9.]*\.tar\.gz\"|url \"https://github.com/ordinators/ordinator/archive/${{ steps.get_version.outputs.VERSION }}.tar.gz\"|" Formula/ordinator.rb
        sed -i "s|sha256 \"[a-f0-9]*\"|sha256 \"${{ steps.get_sha256.outputs.SHA256 }}\"|" Formula/ordinator.rb

    - name: Create pull request
      run: |
        cd homebrew-tap
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b update-ordinator-${{ steps.get_version.outputs.VERSION }}
        git add Formula/ordinator.rb
        git commit -m "Update ordinator to ${{ steps.get_version.outputs.VERSION }}" || exit 0
        git push origin update-ordinator-${{ steps.get_version.outputs.VERSION }}
        gh pr create --title "Update ordinator to ${{ steps.get_version.outputs.VERSION }}" --body "Automated update from ordinator release workflow" --base master || echo "PR creation failed, but formula was updated" 