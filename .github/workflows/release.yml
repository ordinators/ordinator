name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        target: [x86_64-apple-darwin, x86_64-unknown-linux-gnu]
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --all-features

    - name: Security audit
      run: cargo audit --deny warnings

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: ordinator-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/ordinator
        retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download all binaries
      uses: actions/download-artifact@v3
      with:
        path: dist/

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/ordinator-x86_64-apple-darwin
          dist/ordinator-x86_64-unknown-linux-gnu
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 